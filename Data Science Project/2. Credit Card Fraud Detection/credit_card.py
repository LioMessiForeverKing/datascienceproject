# -*- coding: utf-8 -*-
"""credit_card.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JE-GIqAN17wBDFluYJJnO3kinSL6NNYD
"""

# important Libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

data = pd.read_csv("creditcard.csv")

print(data.head())

print(data.info())

# missing value in the dataset
print(data.isnull().sum())

# Distribution of normal and fraud transactions
print(data['Class'].value_counts())

# seprate the data
normal = data[data.Class==0]
fraud = data[data.Class==1]

print(normal.shape)

print(fraud.shape)

# Building new Normal dataset containing similar distribution of normal and fraud transaction
normal_sample= normal.sample(n=492)

#Condatenating the two dataset

new_dataset = pd.concat([normal_sample,fraud],axis=0)

print(new_dataset.head())

print(new_dataset.shape)

#spliting the new_Dataset into X and Y
x = new_dataset.drop(columns='Class',axis=1)
y = new_dataset['Class']

print(x)

print(y)

#spliting the new_Dataset into Training Data and Testing Data
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,stratify=y,random_state=42)

print(x_train,x_test,y_train,y_test)

# Model Training-Loistic Regression
model = LogisticRegression()
model.fit(x_train,y_train)

#Model Evaluation-Accuracy Score
#Accuracy on training data
y_predict = model.predict(x_test)

accuracy = accuracy_score(y_test,y_predict)
print(accuracy)

